// Generated by CoffeeScript 1.6.3
module.exports = function(stream, config, row) {
  return function(fk, fact, next) {
    var e,
      _this = this;
    try {
      return config.models.infomapping.parseObject(fk.query, {
        fact: fact
      }, function(query) {
        var col, k, key, modes, props, size, v, _ref;
        modes = (_ref = fact.getSettings().field_modes) != null ? _ref : {};
        for (key in modes) {
          props = modes[key];
          if (props["eval"]) {
            fact[key] = config.models.infomapping["eval"](props["eval"], {
              fact: fact
            });
          }
        }
        size = 0;
        for (k in query) {
          v = query[k];
          if (v != null) {
            size++;
          }
        }
        if (size === 0) {
          return next();
        }
        col = stream.db.collection(config.models.fact.collectionname(fk.fact_type));
        return col.find(query, {
          _id: 1
        }).toArray(function(err, ids) {
          if (err || ids.length === 0) {
            return next();
          }
          return next(null, ids.map(function(id) {
            return {
              id: id,
              type: fk.fact_type,
              time: +(new Date)
            };
          }));
        });
      });
    } catch (_error) {
      e = _error;
      return next();
    }
  };
};
