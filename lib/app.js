// Generated by CoffeeScript 1.6.3
(function() {
  var file, fs, kue, lynx, name, nconf, path, redis, _i, _len, _ref, _ref1;

  try {
    require('source-map-support').install();
  } catch (_error) {}

  path = require('path');

  nconf = require('nconf');

  nconf.argv();

  nconf.env();

  nconf.file({
    file: path.resolve(__dirname, '../config.json')
  });

  nconf.defaults({
    "mode": 'api'
  });

  global.config = nconf.get();

  global.mongodb = require('mongodb-opstream');

  fs = require('fs');

  _ref = fs.readdirSync(__dirname + '/models');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    file = _ref[_i];
    if (!(file.substr(-3) === '.js')) {
      continue;
    }
    name = file.slice(0, -3);
    name = name.slice(0, 1).toUpperCase() + name.slice(1) + '_Model';
    global[name] = require(__dirname + '/models/' + file);
  }

  redis = require('redis');

  kue = require('kue');

  kue.redis.createClient = function() {
    return redis.createClient(config.redis.port, config.redis.host);
  };

  global.jobs = kue.createQueue();

  lynx = require('lynx');

  global.stats = new lynx(config.statsd.host, config.statsd.port);

  if (config.mode === 'api') {
    require('./api/index');
  } else if (config.mode === 'kue-ui') {
    if (((_ref1 = config.kue) != null ? _ref1.port : void 0) == null) {
      console.error('Kue-ui mode requires kue:port to be set');
      process.exit(0);
    }
    kue.app.listen(config.kue.port);
    kue.app.set('title', 'Faction job queue');
    console.log('Kue user interface listening on port', config.kue.port);
  } else if (config.mode === 'processor') {
    require('./processor/index');
  }

}).call(this);
