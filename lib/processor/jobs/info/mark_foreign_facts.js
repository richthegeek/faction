// Generated by CoffeeScript 1.6.3
(function() {
  var evaluate, parseObject, _ref;

  _ref = require('./eval'), evaluate = _ref.evaluate, parseObject = _ref.parseObject;

  module.exports = function(fk, fact, next) {
    var e,
      _this = this;
    console.log('mark foreign facts called');
    return next();
    try {
      return parseObject(fk.query, {
        fact: fact
      }, function(query) {
        var col, k, size, v;
        size = 0;
        for (k in query) {
          v = query[k];
          if (v != null) {
            size++;
          }
        }
        if (size === 0) {
          return next();
        }
        col = stream.db.collection(config.models.fact.collectionname(fk.fact_type));
        return col.find(query, {
          _id: 1
        }).toArray(function(err, ids) {
          if (err || ids.length === 0) {
            return next();
          }
          return next(null, ids.map(function(id) {
            return {
              id: id._id,
              type: fk.fact_type,
              time: +(new Date)
            };
          }));
        });
      });
    } catch (_error) {
      e = _error;
      return next();
    }
  };

}).call(this);
