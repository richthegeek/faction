// Generated by CoffeeScript 1.6.3
(function() {
  var accounts, async, exec, fs, jobsPath, path, processJobs;

  console.log('Starting processor');

  accounts = {};

  global.loadAccount = function(accountID, next) {
    if (accounts[accountID] != null) {
      return next(null, accounts[accountID]);
    }
    return new Account_Model(function() {
      accounts[accountID] = this;
      return this.load({
        _id: accountID
      }, function(err, found) {
        var _this = this;
        if (err || !found) {
          return err || 'No such account: ' + accountID;
        }
        return mongodb.open(this.dbname(), null, config.mongo.host, config.mongo.port, function(err, db) {
          _this.database = db;
          return next(err, _this);
        });
      });
    });
  };

  jobs.promote();

  async = require('async');

  fs = require('fs');

  path = require('path');

  exec = require('child_process').exec;

  jobsPath = path.resolve(__dirname, './jobs');

  processJobs = function(type, ready) {
    var jobPath, multi, processor;
    jobPath = jobsPath + '/' + type;
    processor = require(jobPath);
    multi = Math.max(processor.concurrency | 0, 1);
    console.log("Processing " + multi + "x '" + type + "' tasks");
    jobs.process(type, multi, function(job, complete) {
      var start;
      start = new Date;
      return processor(job, function(err, result) {
        var end;
        end = new Date;
        stats.increment("kue." + type, 1);
        stats.timing("kue." + type, end - start);
        console.log('+', type, (end - start) + 'ms', job.data.title);
        if (err) {
          console.error('!', type, job.data.title, err);
          job.log(err);
        }
        return complete();
      });
    });
    return ready();
  };

  async.each(fs.readdirSync(jobsPath), processJobs);

}).call(this);

/*
//@ sourceMappingURL=index.map
*/
