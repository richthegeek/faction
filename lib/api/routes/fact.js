// Generated by CoffeeScript 1.6.3
(function() {
  var async;

  async = require('async');

  module.exports = function(server) {
    var Fact_Model;
    Fact_Model = Fact_deferred_Model;
    server.get('/facts', function(req, res, next) {
      return Fact_Model.getTypes(req.account, ErrorHandler(next, function(err, types) {
        return types.detailed(ErrorHandler(next, function(err, info) {
          return res.send(info);
        }));
      }));
    });
    server.get('/facts/:fact-type', Fact_Model.route, function(req, res, next) {
      var _base, _base1;
      if (req.body == null) {
        req.body = {};
      }
      if ((_base = req.body).query == null) {
        _base.query = {};
      }
      if ((_base1 = req.body).map == null) {
        _base1.map = {};
      }
      return req.model.loadPaginated(req.body.query, req, ErrorHandler(next, function(err, response) {
        return res.send(response);
      }));
    });
    server.get('/facts/:fact-type/settings', Factsettings_Model.route, function(req, res, next) {
      return req.model.load({
        _id: req.params['fact-type']
      }, ErrorHandler(next, function(err, found) {
        return res.send(this["export"]());
      }));
    });
    server.post('/facts/:fact-type/settings', Factsettings_Model.route, function(req, res, next) {
      req.body._id = req.params['fact-type'];
      return req.model.update({
        _id: req.body._id
      }, req.body, ErrorHandler(next, function(err, update) {
        return res.send({
          status: 'ok',
          statusText: 'The fact settings were updated.',
          settings: this["export"]()
        });
      }));
    });
    server.get('/facts/:fact-type/fact/:fact-id', Fact_Model.route, function(req, res, next) {
      return req.model.load({
        _id: req.params['fact-id']
      }, true, ErrorHandler(next, function() {
        return res.send(this["export"]());
      }));
    });
    server.get('/facts/:fact-type/fact_def/:fact-id', Fact_Model.route, function(req, res, next) {
      return req.model.load({
        _id: req.params['fact-id']
      }, true, ErrorHandler(next, function(err, found) {
        var _this = this;
        if (err || !found) {
          return res.notFound('fact');
        }
        return this.withMap(req.body["with"], req.body.map, function(err, result) {
          return next(res.send(result));
        });
      }));
    });
    server.post('/facts/:fact-type/fact/:fact-id', Fact_Model.route, function(req, res, next) {
      req.body._id = req.params['fact-id'];
      return req.model.update({
        _id: req.body._id
      }, req.body, ErrorHandler(next, function(err, updated) {
        return res.send({
          status: 'ok',
          statusText: 'The fact was ' + (updated && 'updated.' || 'created.'),
          fact: this["export"]()
        });
      }));
    });
    server.del('/facts/:fact-type', Fact_Model.route, function(req, res, next) {
      return req.model.removeFull(ErrorHandler(next, function() {
        return res.send({
          status: 'ok',
          statusText: 'All facts of this type have been deleted.'
        });
      }));
    });
    server.del('/facts/:fact-type/fact/:fact-id', Fact_Model.route, function(req, res, next) {
      return req.model.remove({
        _id: req.params['fact-id']
      }, ErrorHandler(next, function(err, count) {
        return res.send({
          status: 'ok',
          statusText: 'The fact was deleted.',
          deleted: count | 0
        });
      }));
    });
    server.post('/facts/:fact-type/update/:fact-id', Fact_Model.route, function(req, res, next) {
      return req.model.load({
        _id: req.params['fact-id']
      }, true, ErrorHandler(next, function(err, found) {
        var _this = this;
        if (!found) {
          return next(res.notFound('user'));
        }
        return this.markUpdated(function() {
          return next(res.send({
            status: "ok",
            statusText: "This fact has been marked as updated.",
            fact: _this["export"]()
          }));
        });
      }));
    });
    return server.post('/facts/:fact-type/update', Fact_Model.route, function(req, res, next) {
      return req.model.markUpdatedFull(req.body, ErrorHandler(next, function(err, count) {
        console.log('updated', err, count);
        return next(res.send({
          status: "ok",
          statusText: "" + count + " facts of this type have been marked as updated."
        }));
      }));
    });
  };

}).call(this);

/*
//@ sourceMappingURL=fact.map
*/
