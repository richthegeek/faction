// Generated by CoffeeScript 1.6.3
(function() {
  var Grouped_Model, async,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  async = require('async');

  module.exports = Grouped_Model = (function(_super) {
    __extends(Grouped_Model, _super);

    function Grouped_Model(type, items, callback) {
      var iter,
        _this = this;
      iter = function(item, next) {
        return type._spawn(function() {
          var _this = this;
          return this["import"](item, function() {
            return next(null, _this);
          });
        });
      };
      async.map(items, iter, function(err, items) {
        var item, _i, _len;
        for (_i = 0, _len = items.length; _i < _len; _i++) {
          item = items[_i];
          _this.push(item);
        }
        return callback.call(_this, err, _this);
      });
    }

    Grouped_Model.prototype["export"] = function() {
      var item, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = this.length; _i < _len; _i++) {
        item = this[_i];
        _results.push(item["export"]());
      }
      return _results;
    };

    Grouped_Model.prototype.toJSON = function() {
      var item, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = this.length; _i < _len; _i++) {
        item = this[_i];
        _results.push(item.toJSON());
      }
      return _results;
    };

    return Grouped_Model;

  })(Array);

}).call(this);
