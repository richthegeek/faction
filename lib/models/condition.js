// Generated by CoffeeScript 1.6.3
var Condition_Model, Model, async,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

async = require('async');

Model = require('./model');

module.exports = Condition_Model = (function(_super) {
  __extends(Condition_Model, _super);

  function Condition_Model(account, callback) {
    this.account = account;
    Condition_Model.__super__.constructor.call(this, account.dbname(), 'conditions', function(self, db, coll) {
      return callback.apply(this, arguments);
    });
  }

  Condition_Model.prototype._spawn = function(callback) {
    return new this.constructor(this.account, callback);
  };

  Condition_Model.route = function(req, res, next) {
    return new Condition_Model(req.account, function() {
      req.model = this;
      return next();
    });
  };

  Condition_Model.prototype.validate = function(data) {
    if ((!data.conditions) || (!data.conditions instanceof Array) || data.conditions.length === 0) {
      throw 'A condition must have an array of conditions to be evaluated.';
    }
  };

  Condition_Model.prototype["export"] = function() {
    var data;
    data = Condition_Model.__super__["export"].apply(this, arguments);
    return {
      condition_id: data.condition_id,
      fact_type: data.fact_type,
      description: data.description,
      conditions: data.conditions
    };
  };

  return Condition_Model;

})(Model);
