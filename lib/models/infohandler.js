// Generated by CoffeeScript 1.6.3
var InfoHandler, Model, check, crypto,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

check = require('validator').check;

crypto = require('crypto');

Model = require('./model');

module.exports = InfoHandler = (function(_super) {
  __extends(InfoHandler, _super);

  function InfoHandler(account, callback) {
    this.account = account;
    InfoHandler.__super__.constructor.call(this, account.dbname(), 'info_handlers', callback);
  }

  InfoHandler.prototype.create = function(type, info, callback) {
    if (typeof info === 'function') {
      callback = info;
      info = {};
    }
    info.info_type = type;
    if (!info._id) {
      throw 'An information-handler must have an ID defined.';
    }
    check(info.fact_type, {
      notEmpty: 'An information-handler should have a fact_type property'
    }).notEmpty();
    check(info.fact_identifier, {
      notEmpty: 'An information-handler should have a fact_identifier property'
    }).notEmpty();
    if (!info.track || typeof info.track !== 'object') {
      throw 'An information-handler should have a track property defining how data is applied to facts.';
    }
    this.data = info;
    return this.save(callback);
  };

  return InfoHandler;

})(Model);
