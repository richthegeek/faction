// Generated by CoffeeScript 1.6.3
var Info, Model, check, crypto,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

check = require('validator').check;

crypto = require('crypto');

Model = require('./model');

module.exports = Info = (function(_super) {
  __extends(Info, _super);

  function Info(account, callback) {
    this.account = account;
    Info.__super__.constructor.call(this, account.dbname(), 'info', callback);
  }

  Info.prototype.create = function(type, info, callback) {
    if (typeof info === 'function') {
      callback = info;
      info = {};
    }
    delete info._id;
    info._type = type;
    return this.table.insert(info, callback);
  };

  return Info;

})(Model);
