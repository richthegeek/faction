// Generated by CoffeeScript 1.6.3
(function() {
  var Info_Model, Model, check, crypto,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  check = require('validator').check;

  crypto = require('crypto');

  Model = require('./model');

  module.exports = Info_Model = (function(_super) {
    __extends(Info_Model, _super);

    function Info_Model(account, callback) {
      this.account = account;
      Info_Model.__super__.constructor.call(this, account.dbname(), 'info', callback);
    }

    Info_Model.prototype._spawn = function(callback) {
      return new this.constructor(this.account, callback);
    };

    Info_Model.prototype.create = function(type, info, callback) {
      if (typeof info === 'function') {
        callback = info;
        info = {};
      }
      delete info._id;
      info._type = type;
      return this.table.insert(info, callback);
    };

    Info_Model.route = function(req, res, next) {
      return new Info_Model(req.account, function() {
        req.model = this;
        return next();
      });
    };

    return Info_Model;

  })(Model);

}).call(this);
