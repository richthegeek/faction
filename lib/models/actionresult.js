// Generated by CoffeeScript 1.6.3
(function() {
  var ActionResult_Model, Cache, Model, check, crypto,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  check = require('validator').check;

  crypto = require('crypto');

  Model = require('./model');

  Cache = require('shared-cache');

  module.exports = ActionResult_Model = (function(_super) {
    __extends(ActionResult_Model, _super);

    function ActionResult_Model(account, callback) {
      this.account = account;
      ActionResult_Model.__super__.constructor.call(this, account.dbname(), 'action_results', callback);
    }

    ActionResult_Model.prototype._spawn = function(callback) {
      return new this.constructor(this.account, callback);
    };

    ActionResult_Model.route = function(req, res, next) {
      return new ActionResult_Model(req.account, function() {
        req.model = this;
        return next();
      });
    };

    ActionResult_Model.prototype.setup = function() {
      return this.table.ensureIndex({
        fact_type: 1,
        fact_id: 1,
        action_id: 1
      }, {}, function() {
        return null;
      });
    };

    ActionResult_Model.prototype.validate = function(data, callback) {
      return callback();
    };

    ActionResult_Model.prototype["export"] = function() {
      return {
        fact_id: this.data.fact_id,
        time: this.data.time,
        status: this.data.status,
        result: this.data.result,
        from: this.data.stage_from,
        to: this.data.stage_to
      };
    };

    return ActionResult_Model;

  })(Model);

}).call(this);

/*
//@ sourceMappingURL=actionresult.map
*/
