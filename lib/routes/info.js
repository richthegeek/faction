// Generated by CoffeeScript 1.6.3
var Cache;

Cache = require('shared-cache');

module.exports = function(server) {
  server.post('/info/:info-type', Info_Model.route, function(req, res, next) {
    var handlers;
    handlers = Cache.create('info-handlers-' + req.account.data._id, true, function(key, next) {
      return new Infohandler_Model(req.account, function() {
        return this.table.find().toArray(next);
      });
    });
    return req.model.create(req.params['info-type'], req.body, function(err) {
      if (err) {
        throw err;
      }
      return handlers.get(function(err, list, hit) {
        var handler;
        return res.send({
          status: 'ok',
          statusText: 'Information recieved',
          handlers: (function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = list.length; _i < _len; _i++) {
              handler = list[_i];
              if (handler.info_type === req.params['info-type']) {
                _results.push(Infohandler_Model["export"](handler));
              }
            }
            return _results;
          })()
        });
      });
    });
  });
  server.get('/info/:info-type/handlers', Infohandler_Model.route, function(req, res, next) {
    return req.model.loadPaginated(req.params.asQuery(), req, function(err, response) {
      if (err) {
        throw err;
      }
      return res.send(response);
    });
  });
  server.post('/info/:info-type/handler/:handler-id', Infohandler_Model.route, function(req, res, next) {
    var _this = this;
    delete req.body._id;
    req.body.info_type = req.params['info-type'];
    req.body.handler_id = req.params['handler-id'];
    return req.model.update(req.params.asQuery(), req.body, function(err, updated) {
      if (err) {
        throw err;
      }
      return res.send({
        status: 'ok',
        statusText: 'The information handler was ' + (updated && 'updated.' || 'created.'),
        handler: req.model["export"]()
      });
    });
  });
  return server.del('/info/:info-type/handler/:handler-id', Infohandler_Model.route, function(req, res, next) {
    return req.model.remove(req.params.asQuery(), function(err, count) {
      return res.send({
        status: 'ok',
        statusText: 'The information handler was deleted.',
        deleted: count | 0
      });
    });
  });
};
