// Generated by CoffeeScript 1.6.3
module.exports = function(server) {
  server.get('/conditions', Condition_Model.route, function(req, res, next) {
    return req.model.loadPaginated({}, req, function(err, response) {
      if (err) {
        return req["throw"](err);
      }
      return res.send(response);
    });
  });
  server.get('/conditions/:fact-type', Condition_Model.route, function(req, res, next) {
    return req.model.loadPaginated({
      fact_type: req.params['fact-type']
    }, req, function(err, response) {
      if (err) {
        return req["throw"](err);
      }
      return res.send(response);
    });
  });
  server.get('/conditions/:fact-type/:condition-id', Condition_Model.route, function(req, res, next) {
    return req.model.loadParams(req.params, function() {
      return res.send(this["export"]());
    });
  });
  server.post('/conditions/:fact-type/:condition-id', Condition_Model.route, function(req, res, next) {
    delete req.body._id;
    req.body.fact_type = req.params['fact-type'];
    req.body.condition_id = req.params['condition-id'];
    return req.model.update(req.params, req.body, function(err, updated) {
      if (err) {
        return req["throw"](err);
      }
      return res.send({
        status: 'ok',
        statusText: 'The condition was ' + (updated && 'updated.' || 'created.'),
        condition: this["export"]()
      });
    });
  });
  server.del('/conditions/:fact-type/:condition-id', Condition_Model.route, function(req, res, next) {
    return req.model.loadParams(req.params, function(err, found) {
      if (found) {
        return this.remove(function() {
          return res.send({
            status: "ok",
            statusText: "The condition was removed."
          });
        });
      } else {
        return res.send(404, {
          status: "warning",
          statusText: "No such condition exists, so it was not removed."
        });
      }
    });
  });
  return server.get('/conditions/:fact-type/:condition-id/test/:fact-id', function(req, res, next) {
    return null;
  });
};
